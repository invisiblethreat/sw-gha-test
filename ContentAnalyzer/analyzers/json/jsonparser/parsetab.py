
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COLON COMMA FALSE LBRACKET LSQBRACKET NULL NUMBER RBRACKET RSQBRACKET STRING TRUEstart : array\n             | objectobject : LBRACKET members RBRACKET\n              | LBRACKET RBRACKETmembers : pair\n               | pair COMMA memberspair : STRING COLON valuearray : LSQBRACKET RSQBRACKET\n             | LSQBRACKET elements RSQBRACKETelements : value\n                | value COMMA elementsvalue : STRING\n             | NUMBER\n             | object\n             | array\n             | TRUE\n             | FALSE\n             | NULL'
    
_lr_action_items = {'LSQBRACKET':([0,4,21,24,],[4,4,4,4,]),'LBRACKET':([0,4,21,24,],[5,5,5,5,]),'$end':([1,2,3,6,17,20,22,],[0,-1,-2,-8,-4,-9,-3,]),'RSQBRACKET':([4,6,7,8,9,10,11,12,13,14,15,17,20,22,25,],[6,-8,20,-10,-12,-13,-14,-15,-16,-17,-18,-4,-9,-3,-11,]),'STRING':([4,5,21,23,24,],[9,19,9,19,9,]),'NUMBER':([4,21,24,],[10,10,10,]),'TRUE':([4,21,24,],[13,13,13,]),'FALSE':([4,21,24,],[14,14,14,]),'NULL':([4,21,24,],[15,15,15,]),'RBRACKET':([5,6,9,10,11,12,13,14,15,16,17,18,20,22,26,27,],[17,-8,-12,-13,-14,-15,-16,-17,-18,22,-4,-5,-9,-3,-6,-7,]),'COMMA':([6,8,9,10,11,12,13,14,15,17,18,20,22,27,],[-8,21,-12,-13,-14,-15,-16,-17,-18,-4,23,-9,-3,-7,]),'COLON':([19,],[24,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'array':([0,4,21,24,],[2,12,12,12,]),'object':([0,4,21,24,],[3,11,11,11,]),'elements':([4,21,],[7,25,]),'value':([4,21,24,],[8,8,27,]),'members':([5,23,],[16,26,]),'pair':([5,23,],[18,18,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> array','start',1,'p_start','parser.py',65),
  ('start -> object','start',1,'p_start','parser.py',66),
  ('object -> LBRACKET members RBRACKET','object',3,'p_object','parser.py',73),
  ('object -> LBRACKET RBRACKET','object',2,'p_object','parser.py',74),
  ('members -> pair','members',1,'p_members','parser.py',81),
  ('members -> pair COMMA members','members',3,'p_members','parser.py',82),
  ('pair -> STRING COLON value','pair',3,'p_pair','parser.py',89),
  ('array -> LSQBRACKET RSQBRACKET','array',2,'p_array','parser.py',103),
  ('array -> LSQBRACKET elements RSQBRACKET','array',3,'p_array','parser.py',104),
  ('elements -> value','elements',1,'p_elements','parser.py',111),
  ('elements -> value COMMA elements','elements',3,'p_elements','parser.py',112),
  ('value -> STRING','value',1,'p_value','parser.py',119),
  ('value -> NUMBER','value',1,'p_value','parser.py',120),
  ('value -> object','value',1,'p_value','parser.py',121),
  ('value -> array','value',1,'p_value','parser.py',122),
  ('value -> TRUE','value',1,'p_value','parser.py',123),
  ('value -> FALSE','value',1,'p_value','parser.py',124),
  ('value -> NULL','value',1,'p_value','parser.py',125),
]
