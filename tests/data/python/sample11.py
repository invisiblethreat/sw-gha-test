__author__ = 'raunak'
"""
Django settings for tps2 project.

Generated by 'django-admin startproject' using Django 1.8.3.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os
from agalaxy_share.log_util import logmanager


tps2_logger = logmanager.get_logadapter(module_name='tps2', component_name='tps')
TPS2_LOGGER = tps2_logger

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '@kr+3baj=4!esynx#m-9cdn=vo0$ab3ns9e!(-mm0i3fz^7(ke'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition
INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    #'ddos.action_list',
    'ddos.violation_actions',
    'ddos.src_based_policy',
    'ddos.zone.template.logging',
    'ddos.zone.template.encap',
    # (echou): Note that you shouldn't need an entry for each sub module unless it is truly a standalone Django app.
    # Instead should use the `app_label` property in Meta class of model class and import the models into the root
    # app's models.py file so that they are under the same app label (e.g. zone)
    'ddos.zone.template.ipproto',
    'ddos.zone.template.tcp',
    'ddos.zone.template.udp',
    'ddos.zone.template.dns',
    'ddos.zone.template.http',
    'ddos.zone.template.ssl_l4',
    'ddos.zone.template.glid',
    'ddos.zone.template.icmpv4',
    'ddos.zone.template.icmpv6',
    'ddos.zone',
    'ddos.zone.template.mitigation',
    'ddos.zone.mitigation',
    'ddos.zone.incident',
    'detection.detector',
    'ddos.zone.template',
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'tps2.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'tps2.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'tps2',
        'USER': 'root',
        'PASSWORD': 'a10'
    }
}

# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/
STATIC_ROOT = BASE_DIR + '/static/'
STATIC_URL = '/static/'

# Django REST Framework
REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
        'common.renderers.BrowsableAPIRendererWithoutHTMLForms',
    ),
    'DEFAULT_PARSER_CLASSES': (
        'rest_framework.parsers.JSONParser',
    ),
    'EXCEPTION_HANDLER': 'common.exceptions.exception_handler',
    'DEFAULT_FILTER_BACKENDS': (
        'rest_framework.filters.SearchFilter',
        'rest_framework.filters.OrderingFilter',
        'rest_framework.filters.DjangoFilterBackend',
    ),
}