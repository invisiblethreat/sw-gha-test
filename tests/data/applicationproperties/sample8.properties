#
# Druid - a distributed column store.
# Copyright 2012 - 2015 Metamarkets Group Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Extensions (no deep storage model is listed - using local fs for deep storage - not recommended for production)
# Also, for production to use mysql add, "io.druid.extensions:mysql-metadata-storage"
druid.extensions.loadList=["mysql-metadata-storage", "druid-kafka-eight", "druid-s3-extensions"]
druid.extensions.directory=extensions
druid.extensions.hadoopDependenciesDir=hadoopDependenciesDir

# Zookeeper
druid.zk.service.host=somecompany-zookeeper.marathon.mesos:12181

# Metadata Storage (use something like mysql in production by uncommenting properties below)
# by default druid will use derby
druid.metadata.storage.type=mysql
druid.metadata.storage.connector.connectURI=jdbc:mysql://user-db.marathon.mesos:3306/druid
druid.metadata.storage.connector.user=druid
druid.metadata.storage.connector.password=diurd

# Deep storage (local filesystem for examples - don't use this in production)
druid.storage.type=local
druid.storage.storageDirectory=/tmp/druid/localStorage

# setup S3 deep storage
#druid.storage.type=s3
#druid.s3.accessKey=AKIAJRTI7WX3QDFFZFRA
#druid.s3.secretKey=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
#druid.storage.bucket=somecompany-pro-druid-deep-storage
#druid.storage.baseKey=druid-segments

# Query Cache (we use a simple 10mb heap-based local cache on the broker)
druid.cache.type=local
druid.cache.sizeInBytes=10000000

# Coordinator Service Discovery
druid.selectors.coordinator.serviceName=druid-coordinator

# Indexing service discovery
druid.selectors.indexing.serviceName=druid-overlord

# Monitoring (disabled for examples)
# druid.monitoring.monitors=["com.metamx.metrics.SysMonitor","com.metamx.metrics.JvmMonitor"]

# Metrics logging (disabled for examples)
druid.emitter=logging
druid.emitter.logging.logLevel=debug